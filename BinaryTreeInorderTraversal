/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode *root) {
       vector<int> result;
       if(root==NULL) return result;
       stack<TreeNode* > s;
       s.push(root);
       TreeNode* pre = root,*cur;
       while(!s.empty()) {
           cur = s.top();
           if((cur->left==NULL && cur->right==NULL) || (cur->left == pre || cur->right==pre)) {
               s.pop();
               result.push_back(cur->val);
               pre = cur;
           }
           else {
               if(cur->right)  s.push(cur->right);
               if(cur->left)  s.push(cur->left);
           }
       }
       
       return result;
    }
};
